# Generated by Django 3.2.11 on 2022-11-30 05:22

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_name', models.CharField(default='', max_length=300)),
                ('country_name', models.CharField(default='', max_length=300)),
            ],
            options={
                'db_table': 'public"."country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='child_refid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child', models.CharField(max_length=200, unique=True)),
                ('parent_refid', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'partners_child_auto',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refid', models.CharField(default='', max_length=200)),
                ('partner_name', models.CharField(default='', max_length=200)),
                ('department', models.CharField(default='', max_length=200)),
                ('start_date', models.DateField(default=datetime.datetime.now)),
                ('end_date', models.DateField(default=datetime.datetime.now)),
                ('share_cost', models.IntegerField(default=0)),
                ('cpl_cost', models.FloatField(default=0)),
                ('is_organic', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ref_stream', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('bei_partner', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('valid', models.IntegerField(default=1)),
                ('credit', models.FloatField(default=0)),
                ('report', models.FloatField(default=0)),
            ],
            options={
                'db_table': 'partners_auto',
            },
        ),
        migrations.CreateModel(
            name='PartnersRefstatSums',
            fields=[
                ('current_date', models.DateField(db_column='date', default=datetime.datetime.now)),
                ('country', models.CharField(max_length=16383)),
                ('referral', models.CharField(max_length=16383, primary_key=True, serialize=False)),
                ('regs', models.IntegerField()),
                ('nau', models.IntegerField()),
                ('dau', models.IntegerField()),
                ('actives', models.IntegerField()),
                ('mau', models.IntegerField()),
                ('returnees', models.IntegerField()),
                ('itrans_euro', models.FloatField(db_column='itrans euro')),
                ('napu', models.IntegerField()),
                ('dapu', models.IntegerField()),
                ('activepayuser', models.IntegerField()),
                ('mapu', models.IntegerField()),
                ('returneespayuser', models.IntegerField()),
                ('net_euro', models.FloatField(db_column='net euro')),
                ('three_d_retention', models.IntegerField(db_column='3d_retention')),
                ('seven_d_retention', models.IntegerField(db_column='7d_retention')),
            ],
            options={
                'db_table': 'refstats_sums',
            },
        ),
        migrations.CreateModel(
            name='SpedingsAuto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_column='date', default=datetime.datetime.now)),
                ('net_euro', models.FloatField(db_column='net euro')),
                ('regs', models.FloatField(default=0)),
                ('share_cost', models.FloatField()),
                ('cpl_cost', models.FloatField()),
                ('refid', models.TextField()),
                ('platform', models.TextField()),
                ('country', models.TextField()),
            ],
            options={
                'db_table': 'spendings_auto',
            },
        ),
        migrations.CreateModel(
            name='PartnerPlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(blank=True, default='', max_length=2000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='g_partners.partner')),
            ],
            options={
                'db_table': 'partners_platform_auto',
            },
        ),
        migrations.CreateModel(
            name='PartnerCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_id', models.IntegerField(default=0)),
                ('country', models.CharField(default='', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='g_partners.partner')),
            ],
            options={
                'db_table': 'partners_country_auto',
            },
        ),
    ]
